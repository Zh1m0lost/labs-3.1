// 5 Вариант. 23 номер в списке.

// Применяя процедурный подход:

// Программа для тестирования. Глобально доступен список некоторых
// вопросов, каждый из которых содержит сам вопрос, варианты ответов,
// номер правильного ответа. Возможен вывод некоторого вопроса с
// вариантами ответов, принятие ответа, его оценка;

#include <stdio.h>

// Структура заданных вопросов
struct Question {
    const char *question;
    const char *options[3];
    int correct_answer;
};

// Доступный список вопросов
struct Question questions[] = {
    {"В каком году был основан Волгоградский государственный университет ?",
     {"1980", "1991", "1875"},
     0},
    {"Кто был первым ректором Волгоградского государственного университета?",
     {"Лосев Александр Георгиевич", "Калинина Алла Эдуардовна", "Загорулько Максим Матвеевич",},
     2},
    {"На сколько студентов рассчитано общежитие ВолГу?",
     {"720", "1085", "2105",},
     1},
     {"Можно доп баллы?",
     {"ДА!", "обойдешься", "Идешь на экзамен!"},
     0}
};

// Функция вывода вопроса и вариантов ответов
void print_question(struct Question q) {    //параметр функции, для доступа к данным вопроса 
    printf("%s\n", q.question); 
    for (int i = 0; i < 3; i++) {
        printf("%d) %s\n", i + 1, q.options[i]);
    }
}

// Функция оценки ответа и вывода результата
void evaluate_answer(struct Question q, int answer){
   if (answer == q.correct_answer) {
        printf("Отлично!\n");
    } else { 
        printf("Ты отчислен!!!\n");
    }
}

int main() {
    // Цикл по всем вопросам
    int num_questions = sizeof(questions) / sizeof(struct Question);
    for (int i = 0; i < num_questions; i++) {
        // Вывод вопроса и вариантов ответов
        print_question(questions[i]);

        // Ввод ответа
        int answer;
        printf("Введи номер ПРАВИЛЬНОГО ответа (1,2,3): ");
        while(1) {
            if (scanf("%d", &answer) != 1 || answer < 1 || answer > 3) {
                printf("Ошибка! Даю последний шанс исправиться! (1,2,3): ");
                while(getchar() != '\n'); // Очищаем буфер ввода
            } else {
                break;
            }
        }

        // Оценка ответа и вывод результата
        evaluate_answer(questions[i], answer - 1);
    }

    return 0;
}
